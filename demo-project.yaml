apiVersion: apps/v1
kind: Deployment                                                                                                                                                                              
metadata:
    app: mongo-express
  name: mongo-express
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongo-express
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - image: "mongo-express"
        imagePullPolicy: Always
        name: mongo-express
        resources:
          limits:
            memory: "128M"
            cpu: "1000m"
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-db
              key: username
              optional: false
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-db
              key: password
              optional: false
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: mongo-db
              key: db_url
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment                                                                                                                                                                              
metadata:
    app: mongo-db
  name: mongo-db
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongo-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongo-db
    spec:
      containers:
      - image: "mongo"
        imagePullPolicy: Always
        name: mongo-db
        resources:
          limits:
            memory: "128M"
            cpu: "1000m"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-db
              key: username
              optional: false # same as default; "mysecret" must exist
                              # and include a key named "username"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-db
              key: password
              optional: false # same as default; "mysecret" must exist
                              # and include a key named "username"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo-express
  name: mongo-express-cip
  namespace: default
spec:
  ports:
  - # Exposed service port
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: mongo-express

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo-db
  name: mongo-db-cip
  namespace: default
spec:
  ports:
  - # Exposed service port
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo-db

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongo-db-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  # Specify which Ingress Controller to be used
  ingressClassName: nginx
  rules:
  - host: mongodb.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mongo-db-cip
            port:
              # Exposed service port
              number: 27017

---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-db
type: Opaque
data:
  # property-like keys; each key maps to a simple value
  username: "admin"
  password: "telecom-paris"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-db
data:
  # property-like keys; each key maps to a simple value
  db_url: "mongodb://admin:telecom-paris@mongo-db-cip:27017/"
  


